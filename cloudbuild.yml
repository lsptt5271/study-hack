steps:
  - id: frontend:build
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-f",
        "./client/Dockerfile",
        "-t",
        "${_REGISTRY_URL}/$PROJECT_ID/${_REGISTRY}/${_CONTAINER_FRONTEND_NAME}",
        ".",
      ]
  - id: frontend:push
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "${_REGISTRY_URL}/$PROJECT_ID/${_REGISTRY}/${_CONTAINER_FRONTEND_NAME}",
      ]
  - id: frontend:deploy
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "${_CONTAINER_FRONTEND_NAME}",
        "--image",
        "${_REGISTRY_URL}/$PROJECT_ID/${_REGISTRY}/${_CONTAINER_FRONTEND_NAME}",
        "--region",
        "asia-northeast1",
      ]
  - id: api:build
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-f",
        "./server/Dockerfile",
        "-t",
        "${_REGISTRY_URL}/$PROJECT_ID/${_REGISTRY}/${_CONTAINER_API_NAME}",
        ".",
      ]
  - id: api:push
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "${_REGISTRY_URL}/$PROJECT_ID/${_REGISTRY}/${_CONTAINER_API_NAME}",
      ]
  - id: api:deploy
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "${_CONTAINER_API_NAME}",
        "--image",
        "${_REGISTRY_URL}/$PROJECT_ID/${_REGISTRY}/${_CONTAINER_API_NAME}",
        "--region",
        "asia-northeast1",
        "--add-cloudsql-instances",
        "instance",
      ]
    secretEnv: ["DATABASE_CONNECTION_NAME"]
  - id: db:build
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-f",
        "./server/Dockerfile.migrate",
        "-t",
        "${_REGISTRY_URL}/$PROJECT_ID/${_REGISTRY}/db",
        ".",
      ]
  - id: db:push
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "${_REGISTRY_URL}/$PROJECT_ID/${_REGISTRY}/db"]
    waitFor: ["db:build"]
  - id: db:migrate
    name: "gcr.io/google-appengine/exec-wrapper"
    entrypoint: "bash"
    args:
      - "-c"
      - "/buildstep/execute.sh -i ${_REGISTRY_URL}/$PROJECT_ID/${_REGISTRY}/db -e DATABASE_URL=$$DATABASE_URL -s ${_DB_CONNECTION_NAME} -- npx prisma migrate deploy"
    secretEnv: ["DATABASE_URL"]
    waitFor: ["db:push"]
timeout: 2000s
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/DATABASE_URL/versions/latest
      env: DATABASE_URL
    - versionName: projects/$PROJECT_ID/secrets/DATABASE_CONNECTION_NAME/versions/latest
      env: DATABASE_CONNECTION_NAME
images:
  - ${_REGISTRY_URL}/$PROJECT_ID/${_REGISTRY}/db
