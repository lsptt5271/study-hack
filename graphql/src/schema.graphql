scalar Upload

type Study {
  id: Int!
  name: String!
}

type Category {
  id: Int!
  name: String!
  menus: [Menu!]!
}

type Menu {
  id: Int!
  name: String!
  image: String!
}

type User {
  name: String!
  loginId: String!
}

type Auth {
  user: User!
  exp: Int!
  token: String!
}

input CreateCategoryInput {
  name: String!
}

input DeleteCategoryInput {
  categoryId: Int!
}

input CreateMenuInput {
  name: String!
  image: Upload
  categoryId: Int!
}

input DeleteMenuInput {
  menuId: Int!
}

input CreateUserInput {
  name: String!
  loginId: String!
  loginPassword: String!
}

type Query {
  studies: [Study!]!
  categories(userId: Int): [Category!]!
}

type Mutation {
  createCategory(input: CreateCategoryInput!): Boolean!
  deleteCategory(input: DeleteCategoryInput!): Boolean!
  createMenu(input: CreateMenuInput!): Boolean!
  deleteMenu(input: DeleteMenuInput!): Boolean!
  createUser(input: CreateUserInput!): Auth!
}
