steps:
  - id: api:build
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', './server/Dockerfile', '-t', '${_API_IMAGE_PATH}$SHORT_SHA', '.']
  - id: api:push
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_API_IMAGE_PATH}$SHORT_SHA']
  - id: api:deploy
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      [
        '-c',
        'gcloud run deploy ${_SERVICE_NAME} --image ${_API_IMAGE_PATH}$SHORT_SHA --region ${_REGION} --allow-unauthenticated --port 3001 --set-env-vars DATABASE_URL=$$DATABASE_URL --add-cloudsql-instances ${_DB_CONNECTION_NAME}',
      ]
    secretEnv: ['DATABASE_URL']
  - id: db:build
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', './server/Dockerfile.migrate', '-t', '${_DB_IMAGE_PATH}$SHORT_SHA', '.']
  - id: db:push
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_DB_IMAGE_PATH}$SHORT_SHA']
    waitFor: ['db:build']
  - id: db:migrate
    name: 'gcr.io/google-appengine/exec-wrapper'
    entrypoint: 'bash'
    args: ['-c', '/buildstep/execute.sh -i ${_DB_IMAGE_PATH}$SHORT_SHA -e DATABASE_URL=$$DATABASE_URL -s ${_DB_CONNECTION_NAME} -- npx prisma migrate deploy']
    secretEnv: ['DATABASE_URL']
    waitFor: ['db:push']
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/DATABASE_URL/versions/latest
      env: DATABASE_URL
images:
  - ${_API_IMAGE_PATH}$SHORT_SHA
  - ${_DB_IMAGE_PATH}$SHORT_SHA